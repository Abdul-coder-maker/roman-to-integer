{"version":3,"sources":["App.js","index.js"],"names":["App","useState","romanInput","setRomanInput","romanResult","setRomanResult","className","action","htmlFor","id","value","onChange","e","target","type","placeholder","onClick","preventDefault","s","roman","I","V","X","L","C","D","M","integer","length","i","currentInteger","nextInteger","romanToInt","toUpperCase","xmlns","width","height","viewBox","stroke","fill","d","x1","y1","x2","y2","copyText","document","getElementById","select","setSelectionRange","execCommand","href","rel","style","color","src","alt","class","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1612b843.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nfunction App() {\n  const [romanInput, setRomanInput] = useState(\"\");\n  const [romanResult, setRomanResult] = useState(\"\");\n  const copiedoperation = () => {\n    let copyText = document.getElementById(\"copiedText\");\n    copyText.select();\n    copyText.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  };\n  const romanToInt = (s) => {\n    const roman = {\n      I: 1,\n      V: 5,\n      X: 10,\n      L: 50,\n      C: 100,\n      D: 500,\n      M: 1000,\n    };\n    let integer = 0;\n    let length = s.length;\n    for (let i = 0; i < length; i++) {\n      let currentInteger = roman[s[i]];\n      let nextInteger = roman[s[i + 1]];\n      if (nextInteger) {\n        if (currentInteger >= nextInteger) {\n          integer += currentInteger;\n        } else {\n          integer += nextInteger - currentInteger;\n          i++;\n        }\n      } else {\n        integer += currentInteger;\n      }\n    }\n    return integer;\n  };\n  const submitForm = (e) => {\n    e.preventDefault();\n    // setRomanInput(\"\");\n    setRomanResult(romanToInt(romanInput.toUpperCase()));\n    if (!romanInput) {\n      setRomanResult(\"Please Enter Some Roman ðŸ™‚\");\n    }\n  };\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen antialiased dark:bg-cyan-900\">\n      <div className=\"bg-pink-200 dark:bg-cyan-600 px-6 py-8 rounded sm:w-[576px] mx-auto w-11/12 lg:w-[672px] mb-3 md:mb-0\">\n        <h1 className=\"text-xl font-bold text-gray-500 sm:text-3xl dark:text-gray-900 md:text-5xl\">\n          Roman To Integer Converter\n        </h1>\n\n        <div className=\"p-5 mt-4 bg-white rounded\">\n          <h2 className=\"font-medium sm:text-2xl md:text-3xl md:font-bold\">\n            Enter Your <span className=\"text-[#ff4e93]\">Roman:</span>\n          </h2>\n\n          <form action=\"\" className=\"flex flex-col space-y-2\">\n            <label htmlFor=\"text1\" className=\"sr-only\">\n              Enter Your Roman\n            </label>\n            <input\n              id=\"text1\"\n              value={romanInput}\n              onChange={(e) => setRomanInput(e.target.value)}\n              type=\"text\"\n              className=\"border  rounded focus:outline-none focus:border-[#ff4e93] pl-2 mt-2 font-mono text-sm px-2 py-1 uppercase md:text-lg\"\n              placeholder=\"Enter Roman...\"\n            />\n            <button\n              className=\"bg-[#ff4e93] px-3 py-1 rounded-md text-white font-semibold md:text-xl\"\n              onClick={submitForm}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n        <div className=\"\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"mx-auto mt-6 icon icon-tabler icon-tabler-arrow-narrow-down animate-bounce\"\n            width=\"180\"\n            height=\"180\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1\"\n            stroke=\"#ff4e93\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n            <line x1=\"16\" y1=\"15\" x2=\"12\" y2=\"19\" />\n            <line x1=\"8\" y1=\"15\" x2=\"12\" y2=\"19\" />\n          </svg>\n        </div>\n        <div className=\"p-5 bg-white rounded\">\n          <h2 className=\"font-medium sm:text-2xl md:text-3xl\">\n            Your Converted Number ðŸ‘‡\n          </h2>\n          <div className=\"flex items-center justify-between\">\n            <p className=\"font-medium text-cyan-500 md:text-xl md:font-semibold\">\n              {romanResult}\n            </p>\n            <input\n              id=\"copiedText\"\n              type=\"text\"\n              className=\"sr-only\"\n              placeholder=\"This is a copied number\"\n              value={romanResult}\n            />\n            <button\n              className=\"bg-[#ff4e93] p-2 rounded font-medium text-white \"\n              onClick={copiedoperation}\n            >\n              Copy\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"absolute flex items-center justify-center p-2 space-x-3 transform translate-x-1/2 border-2 border-cyan-500 rounded-lg bottom-4 right-1/2 min-w-[220px] md:translate-x-0 md:right-10 md:min-w-0 md:space-x-0 md:flex-col md:space-y-3 md:p-3\">\n        <a\n          href=\"https://www.codewars.com/users/Abdulrahman__Nasser\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"transition-transform duration-500 transform hover:scale-150\"\n        >\n          <span\n            className=\"text-3xl iconify\"\n            data-icon=\"simple-icons:codewars\"\n            style={{ color: \"#b1361e\" }}\n          ></span>\n        </a>\n        <a\n          href=\"https://twitter.com/AbdulrahmanDev\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"transition-transform duration-500 transform hover:scale-150\"\n        >\n          <i className=\"fab fa-twitter text-[#1DA1F2] text-3xl\"></i>\n        </a>\n        <a\n          href=\"https://github.com/Abdul-coder-maker\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"transition-transform duration-500 transform hover:scale-150\"\n        >\n          <i className=\"text-3xl text-[#161b22] fab fa-github\"></i>\n        </a>\n        <a\n          href=\"https://www.frontendmentor.io/profile/Abdul-coder-maker\"\n          className=\"transition-transform duration-500 transform hover:scale-150\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img\n            className=\"w-[30px] h-[30px] border dark:border-0\"\n            src=\"https://i.ibb.co/27Jgfr5/favicon-32x32.png\"\n            alt=\"favicon-32x32\"\n          />\n        </a>\n\n        <a\n          href=\"https://www.freecodecamp.org/abdulrahman-coder-maker-ffc\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"transition-transform duration-500 transform hover:scale-150\"\n        >\n          <i class=\"fab fa-free-code-camp text-[#0a0a23] text-3xl dark:text-white\"></i>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}